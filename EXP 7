import java.sql.*;
import java.util.*;

// Model
class Student {
    private int studentID;
    private String name;
    private String department;
    private double marks;

    public Student(int studentID, String name, String department, double marks) {
        this.studentID = studentID;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }

    public int getStudentID() { return studentID; }
    public void setStudentID(int studentID) { this.studentID = studentID; }
    public String getName() { return name; }
    public void setName(String name) { this.name = name; }
    public String getDepartment() { return department; }
    public void setDepartment(String department) { this.department = department; }
    public double getMarks() { return marks; }
    public void setMarks(double marks) { this.marks = marks; }
}

// Controller
class StudentController {
    private final String URL = "jdbc:mysql://<workspace_name>.mysql.bytexl.com:3306/<workspace_name>";
    private final String USER = "root";
    private final String PASS = "";

    public Connection connect() throws SQLException { return DriverManager.getConnection(URL, USER, PASS); }

    public void addStudent(Student s) {
        String sql = "INSERT INTO Student(StudentID, Name, Department, Marks) VALUES (?, ?, ?, ?)";
        try (Connection conn = connect();
             PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setInt(1, s.getStudentID());
            pst.setString(2, s.getName());
            pst.setString(3, s.getDepartment());
            pst.setDouble(4, s.getMarks());
            pst.executeUpdate();
            System.out.println("Student added successfully.");
        } catch (SQLException e) { e.printStackTrace(); }
    }

    public List<Student> viewStudents() {
        List<Student> students = new ArrayList<>();
        String sql = "SELECT * FROM Student";
        try (Connection conn = connect();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                students.add(new Student(
                        rs.getInt("StudentID"),
                        rs.getString("Name"),
                        rs.getString("Department"),
                        rs.getDouble("Marks")
                ));
            }
        } catch (SQLException e) { e.printStackTrace(); }
        return students;
    }

    public void updateStudent(Student s) {
        String sql = "UPDATE Student SET Name=?, Department=?, Marks=? WHERE StudentID=?";
        try (Connection conn = connect();
             PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setString(1, s.getName());
            pst.setString(2, s.getDepartment());
            pst.setDouble(3, s.getMarks());
            pst.setInt(4, s.getStudentID());
            pst.executeUpdate();
            System.out.println("Student updated successfully.");
        } catch (SQLException e) { e.printStackTrace(); }
    }

    public void deleteStudent(int studentID) {
        String sql = "DELETE FROM Student WHERE StudentID=?";
        try (Connection conn = connect();
             PreparedStatement pst = conn.prepareStatement(sql)) {
            pst.setInt(1, studentID);
            pst.executeUpdate();
            System.out.println("Student deleted successfully.");
        } catch (SQLException e) { e.printStackTrace(); }
    }
}

// Main application (View + Other Parts)
public class JDBCApp {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        StudentController controller = new StudentController();

        while (true) {
            System.out.println("\n--- Menu ---");
            System.out.println("1. Add Student 2. View Students 3. Update Student 4. Delete Student 5. Exit");
            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1 -> {
                    System.out.print("Enter ID: "); int id = sc.nextInt(); sc.nextLine();
                    System.out.print("Enter Name: "); String name = sc.nextLine();
                    System.out.print("Enter Department: "); String dept = sc.nextLine();
                    System.out.print("Enter Marks: "); double marks = sc.nextDouble();
                    controller.addStudent(new Student(id, name, dept, marks));
                }
                case 2 -> {
                    List<Student> students = controller.viewStudents();
                    System.out.println("ID\tName\tDepartment\tMarks");
                    for (Student s : students) {
                        System.out.printf("%d\t%s\t%s\t%.2f%n",
                                s.getStudentID(), s.getName(), s.getDepartment(), s.getMarks());
                    }
                }
                case 3 -> {
                    System.out.print("Enter ID to update: "); int id = sc.nextInt(); sc.nextLine();
                    System.out.print("Enter new Name: "); String name = sc.nextLine();
                    System.out.print("Enter new Department: "); String dept = sc.nextLine();
                    System.out.print("Enter new Marks: "); double marks = sc.nextDouble();
                    controller.updateStudent(new Student(id, name, dept, marks));
                }
                case 4 -> {
                    System.out.print("Enter ID to delete: "); int id = sc.nextInt();
                    controller.deleteStudent(id);
                }
                case 5 -> { sc.close(); System.exit(0); }
                default -> System.out.println("Invalid choice");
            }
        }
    }
}
