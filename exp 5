import java.io.*;
import java.util.*;

public class Main {
    static Scanner sc = new Scanner(System.in);
    static String empFile = "employees.dat";
    static String studentFile = "student.dat";

    // --- Part B: Student Class ---
    static class Student implements Serializable {
        int studentID;
        String name;
        String grade;

        public Student(int studentID, String name, String grade) {
            this.studentID = studentID;
            this.name = name;
            this.grade = grade;
        }

        @Override
        public String toString() {
            return "ID: " + studentID + ", Name: " + name + ", Grade: " + grade;
        }
    }

    // --- Part C: Employee Class ---
    static class Employee implements Serializable {
        int id;
        String name;
        String designation;
        double salary;

        public Employee(int id, String name, String designation, double salary) {
            this.id = id;
            this.name = name;
            this.designation = designation;
            this.salary = salary;
        }

        @Override
        public String toString() {
            return "ID: " + id + ", Name: " + name + ", Designation: " + designation + ", Salary: " + salary;
        }
    }

    // --- Helper class to append serialized objects ---
    static class AppendableObjectOutputStream extends ObjectOutputStream {
        public AppendableObjectOutputStream(OutputStream out) throws IOException { super(out); }
        @Override
        protected void writeStreamHeader() throws IOException { reset(); }
    }

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n--- Main Menu ---");
            System.out.println("1. Sum of Integers (Autoboxing/Unboxing)");
            System.out.println("2. Serialize/Deserialize Student");
            System.out.println("3. Employee Management");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            int choice = sc.nextInt();
            sc.nextLine(); // consume newline

            switch (choice) {
                case 1: sumIntegers(); break;
                case 2: studentSerialization(); break;
                case 3: employeeManagement(); break;
                case 4: System.out.println("Exiting program."); System.exit(0);
                default: System.out.println("Invalid choice.");
            }
        }
    }

    // --- Part A: Sum of Integers ---
    static void sumIntegers() {
        ArrayList<Integer> numbers = new ArrayList<>();
        System.out.println("Enter integers (type 'done' to finish):");
        while (true) {
            String input = sc.nextLine();
            if (input.equalsIgnoreCase("done")) break;
            try { numbers.add(Integer.parseInt(input)); }
            catch (NumberFormatException e) { System.out.println("Invalid input."); }
        }
        int sum = 0;
        for (Integer n : numbers) sum += n; // unboxing
        System.out.println("Total sum: " + sum);
    }

    // --- Part B: Student Serialization/Deserialization ---
    static void studentSerialization() {
        System.out.print("Enter Student ID: ");
        int id = sc.nextInt();
        sc.nextLine();
        System.out.print("Enter Name: "); String name = sc.nextLine();
        System.out.print("Enter Grade: "); String grade = sc.nextLine();

        Student student = new Student(id, name, grade);

        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(studentFile))) {
            oos.writeObject(student);
            System.out.println("Student serialized successfully.");
        } catch (IOException e) { e.printStackTrace(); }

        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(studentFile))) {
            Student deserialized = (Student) ois.readObject();
            System.out.println("Deserialized Student: " + deserialized);
        } catch (IOException | ClassNotFoundException e) { e.printStackTrace(); }
    }

    // --- Part C: Employee Management ---
    static void employeeManagement() {
        while (true) {
            System.out.println("\n--- Employee Menu ---");
            System.out.println("1. Add Employee");
            System.out.println("2. Display All Employees");
            System.out.println("3. Back to Main Menu");
            System.out.print("Choose an option: ");
            int choice = sc.nextInt(); sc.nextLine();

            switch (choice) {
                case 1:
                    System.out.print("ID: "); int id = sc.nextInt(); sc.nextLine();
                    System.out.print("Name: "); String name = sc.nextLine();
                    System.out.print("Designation: "); String desig = sc.nextLine();
                    System.out.print("Salary: "); double salary = sc.nextDouble(); sc.nextLine();
                    Employee emp = new Employee(id, name, desig, salary);

                    try {
                        File f = new File(empFile);
                        ObjectOutputStream oos;
                        if(f.exists()) oos = new AppendableObjectOutputStream(new FileOutputStream(f,true));
                        else oos = new ObjectOutputStream(new FileOutputStream(f));
                        oos.writeObject(emp); oos.close();
                        System.out.println("Employee added.");
                    } catch(IOException e){ e.printStackTrace(); }
                    break;

                case 2:
                    try(ObjectInputStream ois = new ObjectInputStream(new FileInputStream(empFile))) {
                        System.out.println("\n--- Employees ---");
                        while(true) {
                            Employee e = (Employee) ois.readObject();
                            System.out.println(e);
                        }
                    } catch (EOFException e) { } 
                      catch (IOException | ClassNotFoundException e) { e.printStackTrace(); }
                    break;

                case 3: return;
                default: System.out.println("Invalid choice.");
            }
        }
    }
}
